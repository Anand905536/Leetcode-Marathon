//approach is too simple 
//first we have to insert all absolute diffrences in a vector and then take two pointer l=0 and r=n-1 
//ex:- diff array { 3, 2, 1, 0, 1, 2}  suppose k=3
//then our subarray will be 1 0 1 

// we have to move l and r like this until (k!=n)
// if(alldiff[l] <= alldiff[r]) r--;              
//            else {
//            	l++;
 //           } 


//and then copy that subarray in another new array and return it like i have done below





int n=arr.size();
	vector<int>alldiff;
	for(int i=0;i<n;i++)alldiff.push_back(abs(x-arr[i]));      //copy all diffrences in new array

      int l = 0;
     int r = n-1;
        while(n!=k) 
        {       	
            if(alldiff[l] <= alldiff[r]) r--;              //moving l and r
            else {
            	l++;
            } 
        
             n--;  
        }
    
        vector<int>ans;
        for(int i=l;i<=r;i++)ans.push_back(arr[i]);       // copy that subarray into a new array 

        return ans;
