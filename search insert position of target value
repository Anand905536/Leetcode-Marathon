class Solution {
    public int searchInsert(int[] nums, int target) {
        int n=nums.length;
        int start=0;
	    int end=n-1;
    
    if(target<nums[0])return 0;
    if(target>nums[end])return n;
	 
	while(start<=end)
	{
		int mid = start + (end - start) / 2;
           // cout<<v[mid]<<endl;
         if(nums[mid]==target)
       	{
       		return mid;
       	}
		else if(nums[mid]>target)
		{ 
            end=mid-1;

		}
		else
		{
            start=mid+1; 
		}
	}
	return start;
    }
}
