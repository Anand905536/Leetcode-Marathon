int func(int i,int j,vector<vector<int>>& grid,vector<vector<int>>&dp)
{
    if(i==0 && j==0)return grid[i][j];
    if(i<0 || j<0)return 1e9;

    if(dp[i][j]!=-1)return dp[i][j];
    int up=grid[i][j]+func(i-1,j,grid,dp);
    int left=grid[i][j]+func(i,j-1,grid,dp);
    
    return dp[i][j]=min(up,left);
}
    int minPathSum(vector<vector<int>>& grid) {
        int i=grid.size()-1;
        int j=grid[0].size()-1;
        vector<vector<int>>dp(i+1,vector<int>(j+1,-1));
        return func(i,j,grid,dp);
    }
};
