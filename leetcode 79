bool dfs(int i,int j,int m,int n,vector<vector<char>>& board,string word,int k)
{
    if(k==word.size())return true;
    if(i<0 || j<0 || i>m || j>n || board[i][j]!=word[k])return false;

    char ch=board[i][j];

    board[i][j]='#';
    bool down= dfs(i+1,j,m,n,board,word,k+1);
    bool forw= dfs(i,j+1,m,n,board,word,k+1);
    bool up= dfs(i-1,j,m,n,board,word,k+1);
    bool back= dfs(i,j-1,m,n,board,word,k+1);
    board[i][j]=ch;

       return down || forw || up || back;
}
    bool exist(vector<vector<char>>& board, string word) {
        bool ans;
        for(int i=0;i<board.size();i++)
        {
            for(int j=0;j<board[0].size();j++)
            {
                  if(board[i][j]==word[0])
                  {
                     if(dfs(i,j,board.size()-1,board[0].size()-1,board,word,0)) return true;
                  }
            }
        }
        return false;
    }
